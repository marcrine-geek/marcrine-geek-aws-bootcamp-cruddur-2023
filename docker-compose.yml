version: '3.8'
services:
  xray-daemon:
    image: 'amazon/aws-xray-daemon'
    environment:
      AWS_ACCESS_KEY_ID: '${AWS_ACCESS_KEY_ID}'
      AWS_SECRET_ACCESS_KEY: '${AWS_SECRET_ACCESS_KEY}'
      AWS_REGION: '${AWS_DEFAULT_REGION}'
    command:
      - 'xray -o -b xray-daemon:3000'
    ports:
      - 3000:3000/udp

  backend-flask:
    environment:
      CONNECTION_URL: 'postgresql://postgres:marcrine@cruddur.chkfhb6ik0ro.us-east-1.rds.amazonaws.com:5432/cruddur'
      # CONNECTION_URL: 'postgresql://postgres:password@db:5432/cruddur'
      FRONTEND_URL: 'https://127.0.0.1:3000/'
      BACKEND_URL: 'http://127.0.0.1:4567/'
      OTEL_EXPORTER_OTLP_ENDPOINT: 'https://api.honeycomb.io'
      OTEL_EXPORTER_OTLP_HEADERS: 'x-honeycomb-team=${HONEYCOMB_API_KEY}'
      OTEL_SERVICE_NAME: '${HONEYCOMB_SERVICE_NAME}'
      AWS_XRAY_URL: '*http://127.0.0.1:4567*'
      AWS_XRAY_DAEMON_ADDRESS: 'xray-daemon:3000'
      ROLLBAR_ACCESS_TOKEN: '${ROLLBAR_ACCESS_TOKEN}'
    build: ./backend-flask
    image: marcrine/marcrine-geek-aws-bootcamp-cruddur-2023_backend-flask_1
    ports:
      - '4567:4567'
    volumes:
      - ./backend-flask:/backend-flask
  frontend-react-js:
    environment:
      REACT_APP_BACKEND_URL: 'http://127.0.0.1:4567'
      REACT_APP_AWS_USER_POOLS_ID: 'us-east-1_k6DBnuHDQ'
      REACT_APP_CLIENT_ID: '2t98c0nk5hufp4e76do8pj2e06'
    build: ./frontend-react-js
    image: marcrine/marcrine-geek-aws-bootcamp-cruddur-2023_frontend-react-js_1
    ports:
      - '3000:3000'
    volumes:
      - ./frontend-react-js:/frontend-react-js

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

  dynamodb-local:
    # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
    # We needed to add user:root to get this working.
    user: root
    command: '-jar DynamoDBLocal.jar -sharedDb -dbPath ./data'
    image: 'amazon/dynamodb-local:latest'
    container_name: dynamodb-local
    ports:
      - '8000:8000'

    volumes:
      - './docker/dynamodb:/home/dynamodblocal/data'
    working_dir: /home/dynamodblocal

# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks:
  internal-network:
    driver: bridge
    name: cruddur

volumes:
  db:
    driver: local
